.input {
  $this: &;

  display: block;
  height: $input-height + ($input-error-height * 2);
  position: relative;

  @include input-sizes;

  &--disabled {
    opacity: $disabled-opacity;
    pointer-events: none;
  }

  &--small {
    align-items: center;
    display: flex;
    justify-content: center;
  }

  &__text {
    align-items: center;
    display: flex;
    user-select: none;

    &:not(#{$this}--small) & {
      bottom: $input-error-height;
      height: $input-height;
      left: $border-width;
      padding: $input-text-padding;
      position: absolute;
      width: 100%;
    }

    #{$this}--small & {
      color: var(--theme-color-darker);
    }
  }

  &__field {
    @include shadow(-1px, 1px, inset, 4px);
    @include label-transition;

    background: var(--background-color);
    border: $border;
    border-color: var(--main-color);
    border-radius: $input-border-radius;
    color: var(--main-color);
    outline: 0;
    padding: $input-field-padding;
    width: 100%;

    bottom: $input-error-height;
    height: $input-height;
    left: 0;
    position: absolute;

    #{$this}--small & {
      bottom: unset;
      height: $input-height-small;
      left: auto;
      padding: $input-field-padding-small;
      width: $input-width-small;
    }

    &--hidden {
      @extend %visually-hidden;
    }

    #{$this}--focused & {
      outline: 0;
      border-color: var(--theme-color);
      box-shadow: inset -1px 1px 4px 0px var(--shadow-color), 0px 0px 0 1px var(--theme-color);
    }

    #{$this}--error & {
      border-color: var(--danger-color);
    }

    #{$this}--error#{$this}--focused & {
      border-color: var(--danger-color);
      box-shadow: inset -1px 1px 4px 0px var(--shadow-color), 0px 0px 0 1px var(--danger-color);
    }

    &::placeholder {
      color: var(--main-color-light);
    }
  }

  &__label-wrap {
    position: absolute;
    top: .5rem;
    z-index: 1;
    left: $input-label-offset;
  }

  &__label {
    @include label-transition;

    background: var(--background-color);
    border: $border;
    color: var(--theme-color-darker);
    font-size: $font-size-small;
    line-height: 1.4;
    padding: .1rem .6rem;

    #{$this}--disabled & {
      border-color: var(--main-color);
      color: var(--main-color);
    }

    #{$this}--focused & {
      background: var(--theme-color);
      color: var(--background-color);
    }

    #{$this}--error & {
      border-color: var(--danger-color);
      color: var(--danger-color);
    }

    #{$this}--error#{$this}--focused & {
      background: var(--danger-color);
      border-color: var(--danger-color-darker);
      color: var(--background-color);
    }

    &-back {
      @include shadow;
      @include label-transition;

      background: var(--theme-color-lighter);
      border-left: $border;
      border-bottom: $border;
      height: 2.3rem;
      margin-left: -.3rem;
      margin-top: -.1rem;
      position: absolute;
      width: 100%;
      z-index: -1;

      @include firefox {
        margin-top: 0;
      }

      @include label-back-states($this);

      &:before {
        border-left: $border;
        height: .5rem;
        left: 0;
        top: -.2rem;
        width: .4rem;

        @include firefox {
          top: -.3rem;
        }
      }

      &:after {
        border-right: $border;
        right: -.2rem;
        top: 1.7rem;
        width: .6rem;
        height: .4rem;
      }

      &:before,
      &:after {
        @include label-transition;

        background: var(--theme-color-lighter);
        content: '';
        position: absolute;
        transform: rotate(45deg);

        @include label-back-states($this);
      }
    }
  }

  &__error {
    bottom: 0;
    font-size: $font-size-small;
    height: $input-error-height;
    left: 0;
    line-height: 2;
    padding: 0 $input-label-offset;
    position: absolute;
    width: 100%;
  }
}
